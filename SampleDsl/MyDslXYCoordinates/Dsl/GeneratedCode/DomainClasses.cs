//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Company.MyDslXYCoordinates
{
	/// <summary>
	/// DomainClass ExampleModel
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("Company.MyDslXYCoordinates.ExampleModel.DisplayName", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.MyDslXYCoordinates.ExampleModel.Description", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e876bc3c-1ce6-4375-bdab-736dd8baaca0")]
	public partial class ExampleModel : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ExampleModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe876bc3c, 0x1ce6, 0x4375, 0xbd, 0xab, 0x73, 0x6d, 0xd8, 0xba, 0xac, 0xa0);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ExampleModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ExampleModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Elements opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Elements.
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ExampleElement> Elements
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ExampleElement>, ExampleElement>(global::Company.MyDslXYCoordinates.ExampleModelHasElements.ExampleModelDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Company.MyDslXYCoordinates.ExampleElement.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Company.MyDslXYCoordinates.ExampleElement sourceExampleElement1 = sourceElement as global::Company.MyDslXYCoordinates.ExampleElement;
			if (sourceExampleElement1 != null)
			{
				// Create link for path ExampleModelHasElements.Elements
				this.Elements.Add(sourceExampleElement1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Company.MyDslXYCoordinates.ExampleElement sourceExampleElement1 = sourceElement as global::Company.MyDslXYCoordinates.ExampleElement;
			if (sourceExampleElement1 != null)
			{
				// Delete link for path ExampleModelHasElements.Elements
				
				foreach (DslModeling::ElementLink link in global::Company.MyDslXYCoordinates.ExampleModelHasElements.GetLinks((global::Company.MyDslXYCoordinates.ExampleModel)this, sourceExampleElement1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Company.MyDslXYCoordinates.ExampleModelHasElements.ExampleModelDomainRoleId, global::Company.MyDslXYCoordinates.ExampleModelHasElements.ElementDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Company.MyDslXYCoordinates
{
	/// <summary>
	/// DomainClass ExampleElement
	/// Elements embedded in the model. Appear as boxes on the diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("Company.MyDslXYCoordinates.ExampleElement.DisplayName", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.MyDslXYCoordinates.ExampleElement.Description", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("7d9002cc-fb52-47a5-ac98-b7cc79d8fc20")]
	public partial class ExampleElement : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ExampleElement domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7d9002cc, 0xfb52, 0x47a5, 0xac, 0x98, 0xb7, 0xcc, 0x79, 0xd8, 0xfc, 0x20);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ExampleElement(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ExampleElement(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x3ce49724, 0xd3c9, 0x41ef, 0x8f, 0x83, 0xf3, 0xc2, 0x5c, 0xd9, 0x42, 0x45);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Company.MyDslXYCoordinates.ExampleElement.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslXYCoordinates.ExampleElement/Name.DisplayName", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslXYCoordinates.ExampleElement/Name.Description", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("3ce49724-d3c9-41ef-8f83-f3c25cd94245")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ExampleElement.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<ExampleElement, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ExampleElement.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ExampleElement.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ExampleElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ExampleElement element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region X domain property code
		
		/// <summary>
		/// X domain property Id.
		/// </summary>
		public static readonly global::System.Guid XDomainPropertyId = new global::System.Guid(0x986f940a, 0x8b12, 0x412b, 0x93, 0xcc, 0xf0, 0xe4, 0xae, 0x0e, 0xec, 0x9f);
		
		/// <summary>
		/// Gets or sets the value of X domain property.
		/// Description for Company.MyDslXYCoordinates.ExampleElement.X
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslXYCoordinates.ExampleElement/X.DisplayName", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslXYCoordinates.ExampleElement/X.Description", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("986f940a-8b12-412b-93cc-f0e4ae0eec9f")]
		public global::System.Double X
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return XPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the ExampleElement.X domain property.
		/// </summary>
		internal sealed partial class XPropertyHandler : DslModeling::CalculatedPropertyValueHandler<ExampleElement, global::System.Double>
		{
			private XPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ExampleElement.X domain property value handler.
			/// </summary>
			public static readonly XPropertyHandler Instance = new XPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ExampleElement.X domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return XDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Double GetValue(ExampleElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for X because its Kind is
				// set to Calculated. Please provide the GetXValue()
				// method on the domain class.
				return element.GetXValue();
			}
		
		}
		
		#endregion
		#region Y domain property code
		
		/// <summary>
		/// Y domain property Id.
		/// </summary>
		public static readonly global::System.Guid YDomainPropertyId = new global::System.Guid(0xbe046cb3, 0xa93e, 0x4a9c, 0x87, 0xf8, 0xa4, 0xdc, 0xfd, 0xce, 0xc7, 0xb8);
		
		/// <summary>
		/// Gets or sets the value of Y domain property.
		/// Description for Company.MyDslXYCoordinates.ExampleElement.Y
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslXYCoordinates.ExampleElement/Y.DisplayName", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslXYCoordinates.ExampleElement/Y.Description", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("be046cb3-a93e-4a9c-87f8-a4dcfdcec7b8")]
		public global::System.Double Y
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return YPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the ExampleElement.Y domain property.
		/// </summary>
		internal sealed partial class YPropertyHandler : DslModeling::CalculatedPropertyValueHandler<ExampleElement, global::System.Double>
		{
			private YPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ExampleElement.Y domain property value handler.
			/// </summary>
			public static readonly YPropertyHandler Instance = new YPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ExampleElement.Y domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return YDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Double GetValue(ExampleElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for Y because its Kind is
				// set to Calculated. Please provide the GetYValue()
				// method on the domain class.
				return element.GetYValue();
			}
		
		}
		
		#endregion
		#region Width domain property code
		
		/// <summary>
		/// Width domain property Id.
		/// </summary>
		public static readonly global::System.Guid WidthDomainPropertyId = new global::System.Guid(0xb2453175, 0x446a, 0x4732, 0xaf, 0x72, 0x16, 0x90, 0x12, 0x7a, 0x92, 0x4c);
		
		/// <summary>
		/// Gets or sets the value of Width domain property.
		/// Description for Company.MyDslXYCoordinates.ExampleElement.Width
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslXYCoordinates.ExampleElement/Width.DisplayName", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslXYCoordinates.ExampleElement/Width.Description", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("b2453175-446a-4732-af72-1690127a924c")]
		public global::System.Double Width
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return WidthPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the ExampleElement.Width domain property.
		/// </summary>
		internal sealed partial class WidthPropertyHandler : DslModeling::CalculatedPropertyValueHandler<ExampleElement, global::System.Double>
		{
			private WidthPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ExampleElement.Width domain property value handler.
			/// </summary>
			public static readonly WidthPropertyHandler Instance = new WidthPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ExampleElement.Width domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return WidthDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Double GetValue(ExampleElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for Width because its Kind is
				// set to Calculated. Please provide the GetWidthValue()
				// method on the domain class.
				return element.GetWidthValue();
			}
		
		}
		
		#endregion
		#region Height domain property code
		
		/// <summary>
		/// Height domain property Id.
		/// </summary>
		public static readonly global::System.Guid HeightDomainPropertyId = new global::System.Guid(0x0aa51cdf, 0xd467, 0x4272, 0x97, 0x59, 0x47, 0x8d, 0x18, 0x27, 0xfc, 0xe9);
		
		/// <summary>
		/// Gets or sets the value of Height domain property.
		/// Description for Company.MyDslXYCoordinates.ExampleElement.Height
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslXYCoordinates.ExampleElement/Height.DisplayName", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslXYCoordinates.ExampleElement/Height.Description", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("0aa51cdf-d467-4272-9759-478d1827fce9")]
		public global::System.Double Height
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return HeightPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the ExampleElement.Height domain property.
		/// </summary>
		internal sealed partial class HeightPropertyHandler : DslModeling::CalculatedPropertyValueHandler<ExampleElement, global::System.Double>
		{
			private HeightPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ExampleElement.Height domain property value handler.
			/// </summary>
			public static readonly HeightPropertyHandler Instance = new HeightPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ExampleElement.Height domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return HeightDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Double GetValue(ExampleElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for Height because its Kind is
				// set to Calculated. Please provide the GetHeightValue()
				// method on the domain class.
				return element.GetHeightValue();
			}
		
		}
		
		#endregion
		#region Comment domain property code
		
		/// <summary>
		/// Comment domain property Id.
		/// </summary>
		public static readonly global::System.Guid CommentDomainPropertyId = new global::System.Guid(0x1050f58f, 0xead7, 0x4b64, 0x88, 0xc4, 0xc8, 0x66, 0x25, 0x2c, 0x6f, 0xe4);
		
		/// <summary>
		/// Storage for Comment
		/// </summary>
		private global::System.String commentPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Comment domain property.
		/// Description for Company.MyDslXYCoordinates.ExampleElement.Comment
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslXYCoordinates.ExampleElement/Comment.DisplayName", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslXYCoordinates.ExampleElement/Comment.Description", typeof(global::Company.MyDslXYCoordinates.MyDslXYCoordinatesDomainModel), "Company.MyDslXYCoordinates.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("1050f58f-ead7-4b64-88c4-c866252c6fe4")]
		public global::System.String Comment
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return commentPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CommentPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ExampleElement.Comment domain property.
		/// </summary>
		internal sealed partial class CommentPropertyHandler : DslModeling::DomainPropertyValueHandler<ExampleElement, global::System.String>
		{
			private CommentPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ExampleElement.Comment domain property value handler.
			/// </summary>
			public static readonly CommentPropertyHandler Instance = new CommentPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ExampleElement.Comment domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CommentDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ExampleElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.commentPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ExampleElement element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.commentPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ExampleModel opposite domain role accessor
		/// <summary>
		/// Gets or sets ExampleModel.
		/// </summary>
		public virtual ExampleModel ExampleModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Company.MyDslXYCoordinates.ExampleModelHasElements.ElementDomainRoleId) as ExampleModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Company.MyDslXYCoordinates.ExampleModelHasElements.ElementDomainRoleId, value);
			}
		}
		#endregion
	}
}
