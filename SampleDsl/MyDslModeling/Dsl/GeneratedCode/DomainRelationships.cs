//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Company.MyDslModeling
{
	/// <summary>
	/// DomainRelationship ExampleModelHasElements
	/// Embedding relationship between the Model and Elements
	/// </summary>
	[DslDesign::DisplayNameResource("Company.MyDslModeling.ExampleModelHasElements.DisplayName", typeof(global::Company.MyDslModeling.MyDslModelingDomainModel), "Company.MyDslModeling.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.MyDslModeling.ExampleModelHasElements.Description", typeof(global::Company.MyDslModeling.MyDslModelingDomainModel), "Company.MyDslModeling.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.MyDslModeling.MyDslModelingDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("c561eadd-7262-4e1a-84ff-96f917476169")]
	public partial class ExampleModelHasElements : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ExampleModelHasElements domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc561eadd, 0x7262, 0x4e1a, 0x84, 0xff, 0x96, 0xf9, 0x17, 0x47, 0x61, 0x69);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ExampleModelHasElements link in the same Partition as the given ExampleModel
		/// </summary>
		/// <param name="source">ExampleModel to use as the source of the relationship.</param>
		/// <param name="target">MyObject to use as the target of the relationship.</param>
		public ExampleModelHasElements(ExampleModel source, MyObject target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ExampleModelHasElements.ExampleModelDomainRoleId, source), new DslModeling::RoleAssignment(ExampleModelHasElements.ElementDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleModelHasElements(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleModelHasElements(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleModelHasElements(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleModelHasElements(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ExampleModel domain role code
		
		/// <summary>
		/// ExampleModel domain role Id.
		/// </summary>
		public static readonly global::System.Guid ExampleModelDomainRoleId = new global::System.Guid(0xfab70bf9, 0x6231, 0x4909, 0xa2, 0x40, 0xfc, 0x4d, 0x61, 0xa2, 0x5b, 0xb8);
		
		/// <summary>
		/// DomainRole ExampleModel
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslModeling.ExampleModelHasElements/ExampleModel.DisplayName", typeof(global::Company.MyDslModeling.MyDslModelingDomainModel), "Company.MyDslModeling.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslModeling.ExampleModelHasElements/ExampleModel.Description", typeof(global::Company.MyDslModeling.MyDslModelingDomainModel), "Company.MyDslModeling.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Elements", PropertyDisplayNameKey="Company.MyDslModeling.ExampleModelHasElements/ExampleModel.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("fab70bf9-6231-4909-a240-fc4d61a25bb8")]
		public virtual ExampleModel ExampleModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ExampleModel)DslModeling::DomainRoleInfo.GetRolePlayer(this, ExampleModelDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ExampleModelDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ExampleModel of a MyObject
		/// <summary>
		/// Gets ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ExampleModel GetExampleModel(MyObject element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ElementDomainRoleId) as ExampleModel;
		}
		
		/// <summary>
		/// Sets ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetExampleModel(MyObject element, ExampleModel newExampleModel)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ElementDomainRoleId, newExampleModel);
		}
		#endregion
		#region Element domain role code
		
		/// <summary>
		/// Element domain role Id.
		/// </summary>
		public static readonly global::System.Guid ElementDomainRoleId = new global::System.Guid(0xaeee8b2d, 0x681c, 0x47d6, 0x96, 0x5f, 0x4c, 0x14, 0x6f, 0x13, 0x52, 0x55);
		
		/// <summary>
		/// DomainRole Element
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslModeling.ExampleModelHasElements/Element.DisplayName", typeof(global::Company.MyDslModeling.MyDslModelingDomainModel), "Company.MyDslModeling.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslModeling.ExampleModelHasElements/Element.Description", typeof(global::Company.MyDslModeling.MyDslModelingDomainModel), "Company.MyDslModeling.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ExampleModel", PropertyDisplayNameKey="Company.MyDslModeling.ExampleModelHasElements/Element.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("aeee8b2d-681c-47d6-965f-4c146f135255")]
		public virtual MyObject Element
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (MyObject)DslModeling::DomainRoleInfo.GetRolePlayer(this, ElementDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ElementDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Elements of a ExampleModel
		/// <summary>
		/// Gets a list of Elements.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<MyObject> GetElements(ExampleModel element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<MyObject>, MyObject>(element, ExampleModelDomainRoleId);
		}
		#endregion
		#region ExampleModel link accessor
		/// <summary>
		/// Get the list of ExampleModelHasElements links to a ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.MyDslModeling.ExampleModelHasElements> GetLinksToElements ( global::Company.MyDslModeling.ExampleModel exampleModelInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslModeling.ExampleModelHasElements>(exampleModelInstance, global::Company.MyDslModeling.ExampleModelHasElements.ExampleModelDomainRoleId);
		}
		#endregion
		#region Element link accessor
		/// <summary>
		/// Get the ExampleModelHasElements link to a MyObject.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Company.MyDslModeling.ExampleModelHasElements GetLinkToExampleModel (global::Company.MyDslModeling.MyObject elementInstance)
		{
			global::System.Collections.Generic.IList<global::Company.MyDslModeling.ExampleModelHasElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslModeling.ExampleModelHasElements>(elementInstance, global::Company.MyDslModeling.ExampleModelHasElements.ElementDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Element not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ExampleModelHasElements instance accessors
		
		/// <summary>
		/// Get any ExampleModelHasElements links between a given ExampleModel and a MyObject.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.MyDslModeling.ExampleModelHasElements> GetLinks( global::Company.MyDslModeling.ExampleModel source, global::Company.MyDslModeling.MyObject target )
		{
			global::System.Collections.Generic.List<global::Company.MyDslModeling.ExampleModelHasElements> outLinks = new global::System.Collections.Generic.List<global::Company.MyDslModeling.ExampleModelHasElements>();
			global::System.Collections.Generic.IList<global::Company.MyDslModeling.ExampleModelHasElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslModeling.ExampleModelHasElements>(source, global::Company.MyDslModeling.ExampleModelHasElements.ExampleModelDomainRoleId);
			foreach ( global::Company.MyDslModeling.ExampleModelHasElements link in links )
			{
				if ( target.Equals(link.Element) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ExampleModelHasElements link between a given ExampleModeland a MyObject.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Company.MyDslModeling.ExampleModelHasElements GetLink( global::Company.MyDslModeling.ExampleModel source, global::Company.MyDslModeling.MyObject target )
		{
			global::System.Collections.Generic.IList<global::Company.MyDslModeling.ExampleModelHasElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslModeling.ExampleModelHasElements>(source, global::Company.MyDslModeling.ExampleModelHasElements.ExampleModelDomainRoleId);
			foreach ( global::Company.MyDslModeling.ExampleModelHasElements link in links )
			{
				if ( target.Equals(link.Element) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Company.MyDslModeling
{
	/// <summary>
	/// DomainRelationship ExampleModelHasMySecondObject
	/// Description for Company.MyDslModeling.ExampleModelHasMySecondObject
	/// </summary>
	[DslDesign::DisplayNameResource("Company.MyDslModeling.ExampleModelHasMySecondObject.DisplayName", typeof(global::Company.MyDslModeling.MyDslModelingDomainModel), "Company.MyDslModeling.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.MyDslModeling.ExampleModelHasMySecondObject.Description", typeof(global::Company.MyDslModeling.MyDslModelingDomainModel), "Company.MyDslModeling.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.MyDslModeling.MyDslModelingDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("72d12845-2f13-4eda-b57d-b2ceb95998f5")]
	public partial class ExampleModelHasMySecondObject : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ExampleModelHasMySecondObject domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x72d12845, 0x2f13, 0x4eda, 0xb5, 0x7d, 0xb2, 0xce, 0xb9, 0x59, 0x98, 0xf5);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ExampleModelHasMySecondObject link in the same Partition as the given ExampleModel
		/// </summary>
		/// <param name="source">ExampleModel to use as the source of the relationship.</param>
		/// <param name="target">MySecondObject to use as the target of the relationship.</param>
		public ExampleModelHasMySecondObject(ExampleModel source, MySecondObject target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ExampleModelHasMySecondObject.ExampleModelDomainRoleId, source), new DslModeling::RoleAssignment(ExampleModelHasMySecondObject.MySecondObjectDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleModelHasMySecondObject(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleModelHasMySecondObject(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleModelHasMySecondObject(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleModelHasMySecondObject(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ExampleModel domain role code
		
		/// <summary>
		/// ExampleModel domain role Id.
		/// </summary>
		public static readonly global::System.Guid ExampleModelDomainRoleId = new global::System.Guid(0xa393ea5f, 0x6a0d, 0x48fc, 0x96, 0xca, 0xb6, 0x7a, 0x73, 0x9f, 0x3b, 0x47);
		
		/// <summary>
		/// DomainRole ExampleModel
		/// Description for Company.MyDslModeling.ExampleModelHasMySecondObject.ExampleModel
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslModeling.ExampleModelHasMySecondObject/ExampleModel.DisplayName", typeof(global::Company.MyDslModeling.MyDslModelingDomainModel), "Company.MyDslModeling.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslModeling.ExampleModelHasMySecondObject/ExampleModel.Description", typeof(global::Company.MyDslModeling.MyDslModelingDomainModel), "Company.MyDslModeling.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "MySecondObject", PropertyDisplayNameKey="Company.MyDslModeling.ExampleModelHasMySecondObject/ExampleModel.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("a393ea5f-6a0d-48fc-96ca-b67a739f3b47")]
		public virtual ExampleModel ExampleModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ExampleModel)DslModeling::DomainRoleInfo.GetRolePlayer(this, ExampleModelDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ExampleModelDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ExampleModel of a MySecondObject
		/// <summary>
		/// Gets ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ExampleModel GetExampleModel(MySecondObject element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, MySecondObjectDomainRoleId) as ExampleModel;
		}
		
		/// <summary>
		/// Sets ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetExampleModel(MySecondObject element, ExampleModel newExampleModel)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, MySecondObjectDomainRoleId, newExampleModel);
		}
		#endregion
		#region MySecondObject domain role code
		
		/// <summary>
		/// MySecondObject domain role Id.
		/// </summary>
		public static readonly global::System.Guid MySecondObjectDomainRoleId = new global::System.Guid(0x18888860, 0xb3f0, 0x41e3, 0xbb, 0x04, 0x7e, 0xaf, 0x4b, 0x54, 0xb5, 0xe3);
		
		/// <summary>
		/// DomainRole MySecondObject
		/// Description for
		/// Company.MyDslModeling.ExampleModelHasMySecondObject.MySecondObject
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslModeling.ExampleModelHasMySecondObject/MySecondObject.DisplayName", typeof(global::Company.MyDslModeling.MyDslModelingDomainModel), "Company.MyDslModeling.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslModeling.ExampleModelHasMySecondObject/MySecondObject.Description", typeof(global::Company.MyDslModeling.MyDslModelingDomainModel), "Company.MyDslModeling.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ExampleModel", PropertyDisplayNameKey="Company.MyDslModeling.ExampleModelHasMySecondObject/MySecondObject.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("18888860-b3f0-41e3-bb04-7eaf4b54b5e3")]
		public virtual MySecondObject MySecondObject
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (MySecondObject)DslModeling::DomainRoleInfo.GetRolePlayer(this, MySecondObjectDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MySecondObjectDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access MySecondObject of a ExampleModel
		/// <summary>
		/// Gets a list of MySecondObject.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<MySecondObject> GetMySecondObject(ExampleModel element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<MySecondObject>, MySecondObject>(element, ExampleModelDomainRoleId);
		}
		#endregion
		#region ExampleModel link accessor
		/// <summary>
		/// Get the list of ExampleModelHasMySecondObject links to a ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.MyDslModeling.ExampleModelHasMySecondObject> GetLinksToMySecondObject ( global::Company.MyDslModeling.ExampleModel exampleModelInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslModeling.ExampleModelHasMySecondObject>(exampleModelInstance, global::Company.MyDslModeling.ExampleModelHasMySecondObject.ExampleModelDomainRoleId);
		}
		#endregion
		#region MySecondObject link accessor
		/// <summary>
		/// Get the ExampleModelHasMySecondObject link to a MySecondObject.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Company.MyDslModeling.ExampleModelHasMySecondObject GetLinkToExampleModel (global::Company.MyDslModeling.MySecondObject mySecondObjectInstance)
		{
			global::System.Collections.Generic.IList<global::Company.MyDslModeling.ExampleModelHasMySecondObject> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslModeling.ExampleModelHasMySecondObject>(mySecondObjectInstance, global::Company.MyDslModeling.ExampleModelHasMySecondObject.MySecondObjectDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of MySecondObject not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ExampleModelHasMySecondObject instance accessors
		
		/// <summary>
		/// Get any ExampleModelHasMySecondObject links between a given ExampleModel and a MySecondObject.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.MyDslModeling.ExampleModelHasMySecondObject> GetLinks( global::Company.MyDslModeling.ExampleModel source, global::Company.MyDslModeling.MySecondObject target )
		{
			global::System.Collections.Generic.List<global::Company.MyDslModeling.ExampleModelHasMySecondObject> outLinks = new global::System.Collections.Generic.List<global::Company.MyDslModeling.ExampleModelHasMySecondObject>();
			global::System.Collections.Generic.IList<global::Company.MyDslModeling.ExampleModelHasMySecondObject> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslModeling.ExampleModelHasMySecondObject>(source, global::Company.MyDslModeling.ExampleModelHasMySecondObject.ExampleModelDomainRoleId);
			foreach ( global::Company.MyDslModeling.ExampleModelHasMySecondObject link in links )
			{
				if ( target.Equals(link.MySecondObject) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ExampleModelHasMySecondObject link between a given ExampleModeland a MySecondObject.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Company.MyDslModeling.ExampleModelHasMySecondObject GetLink( global::Company.MyDslModeling.ExampleModel source, global::Company.MyDslModeling.MySecondObject target )
		{
			global::System.Collections.Generic.IList<global::Company.MyDslModeling.ExampleModelHasMySecondObject> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslModeling.ExampleModelHasMySecondObject>(source, global::Company.MyDslModeling.ExampleModelHasMySecondObject.ExampleModelDomainRoleId);
			foreach ( global::Company.MyDslModeling.ExampleModelHasMySecondObject link in links )
			{
				if ( target.Equals(link.MySecondObject) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
