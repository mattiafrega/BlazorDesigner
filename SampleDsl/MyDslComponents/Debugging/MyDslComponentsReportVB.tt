<#@ template debug="true" inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ output extension=".razor" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ MyDslComponents processor="MyDslComponentsDirectiveProcessor" requires="fileName='Sample.MyDslComponents.diagram'" #>

//prints all the nodes in the Xml of the DSl Diagram
<#
 // Read the model file
 XmlDocument doc = new XmlDocument();
 doc.Load(@"C:\Users\matti\source\repos\MyDslComponents\Debugging\Sample.MyDslComponents.diagram");
 Dictionary <string, string> nodeTypes =
        new Dictionary<string, string>();
 foreach (XmlNode node in doc.SelectNodes("//*"))
 {
   nodeTypes[node.Name] = "";
 }
 // Generate the code
 foreach (string nodeName in nodeTypes.Keys)
 {
#>
< <#= nodeName #> />
<#
 }
#>


//prints only the MyButtonShapes
<#
 Dictionary <string, string> buttonShapes =
        new Dictionary<string, string>();
 foreach (XmlNode node in doc.SelectNodes("//myButtonShape"))
 {
   buttonShapes[node.Name] = "";
 }
 // Generate the code
 foreach (string nodeName in buttonShapes.Keys)
 {
#>
< <#= nodeName #> />
<#
 }
#>

//prints only the MyTextBoxShapes
<#
 Dictionary <string, string> textboxShapes =
        new Dictionary<string, string>();
 foreach (XmlNode node in doc.SelectNodes("//myTextboxShape"))
 {
   textboxShapes[node.Name] = "";
 }
 // Generate the code
 foreach (string nodeName in textboxShapes.Keys)
 {
#>
< <#= nodeName #> />
<#
 }
#>

//prints only the MyGaugeShapes
<#
 Dictionary <string, string> gaugeShapes =
        new Dictionary<string, string>();
 foreach (XmlNode node in doc.SelectNodes("//myGaugeShape"))
 {
   gaugeShapes[node.Name] = "";
 }
 // Generate the code
 foreach (string nodeName in gaugeShapes.Keys)
 {
#>
< <#= nodeName #>/>
<#
 }
#>
