//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Company.MyDslInheritance
{
	/// <summary>
	/// DomainRelationship ExampleModelHasDog
	/// Description for Company.MyDslInheritance.ExampleModelHasDog
	/// </summary>
	[DslDesign::DisplayNameResource("Company.MyDslInheritance.ExampleModelHasDog.DisplayName", typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel), "Company.MyDslInheritance.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.MyDslInheritance.ExampleModelHasDog.Description", typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel), "Company.MyDslInheritance.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("f9927609-414c-496f-89c5-7836bc707cb5")]
	public partial class ExampleModelHasDog : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ExampleModelHasDog domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf9927609, 0x414c, 0x496f, 0x89, 0xc5, 0x78, 0x36, 0xbc, 0x70, 0x7c, 0xb5);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ExampleModelHasDog link in the same Partition as the given ExampleModel
		/// </summary>
		/// <param name="source">ExampleModel to use as the source of the relationship.</param>
		/// <param name="target">Dog to use as the target of the relationship.</param>
		public ExampleModelHasDog(ExampleModel source, Dog target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ExampleModelHasDog.ExampleModelDomainRoleId, source), new DslModeling::RoleAssignment(ExampleModelHasDog.DogDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleModelHasDog(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleModelHasDog(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleModelHasDog(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleModelHasDog(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ExampleModel domain role code
		
		/// <summary>
		/// ExampleModel domain role Id.
		/// </summary>
		public static readonly global::System.Guid ExampleModelDomainRoleId = new global::System.Guid(0x43f31312, 0x3e70, 0x41ee, 0x9f, 0x3d, 0xb4, 0x8c, 0x5d, 0x7b, 0x57, 0x54);
		
		/// <summary>
		/// DomainRole ExampleModel
		/// Description for Company.MyDslInheritance.ExampleModelHasDog.ExampleModel
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslInheritance.ExampleModelHasDog/ExampleModel.DisplayName", typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel), "Company.MyDslInheritance.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslInheritance.ExampleModelHasDog/ExampleModel.Description", typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel), "Company.MyDslInheritance.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Dog", PropertyDisplayNameKey="Company.MyDslInheritance.ExampleModelHasDog/ExampleModel.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("43f31312-3e70-41ee-9f3d-b48c5d7b5754")]
		public virtual ExampleModel ExampleModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ExampleModel)DslModeling::DomainRoleInfo.GetRolePlayer(this, ExampleModelDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ExampleModelDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ExampleModel of a Dog
		/// <summary>
		/// Gets ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ExampleModel GetExampleModel(Dog element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, DogDomainRoleId) as ExampleModel;
		}
		
		/// <summary>
		/// Sets ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetExampleModel(Dog element, ExampleModel newExampleModel)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, DogDomainRoleId, newExampleModel);
		}
		#endregion
		#region Dog domain role code
		
		/// <summary>
		/// Dog domain role Id.
		/// </summary>
		public static readonly global::System.Guid DogDomainRoleId = new global::System.Guid(0x3f782b8c, 0x2384, 0x4513, 0xaa, 0x2d, 0x5b, 0xad, 0x24, 0x0a, 0xe6, 0x6c);
		
		/// <summary>
		/// DomainRole Dog
		/// Description for Company.MyDslInheritance.ExampleModelHasDog.Dog
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslInheritance.ExampleModelHasDog/Dog.DisplayName", typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel), "Company.MyDslInheritance.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslInheritance.ExampleModelHasDog/Dog.Description", typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel), "Company.MyDslInheritance.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ExampleModel", PropertyDisplayNameKey="Company.MyDslInheritance.ExampleModelHasDog/Dog.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("3f782b8c-2384-4513-aa2d-5bad240ae66c")]
		public virtual Dog Dog
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Dog)DslModeling::DomainRoleInfo.GetRolePlayer(this, DogDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, DogDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Dog of a ExampleModel
		/// <summary>
		/// Gets a list of Dog.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Dog> GetDog(ExampleModel element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Dog>, Dog>(element, ExampleModelDomainRoleId);
		}
		#endregion
		#region ExampleModel link accessor
		/// <summary>
		/// Get the list of ExampleModelHasDog links to a ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.MyDslInheritance.ExampleModelHasDog> GetLinksToDog ( global::Company.MyDslInheritance.ExampleModel exampleModelInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslInheritance.ExampleModelHasDog>(exampleModelInstance, global::Company.MyDslInheritance.ExampleModelHasDog.ExampleModelDomainRoleId);
		}
		#endregion
		#region Dog link accessor
		/// <summary>
		/// Get the ExampleModelHasDog link to a Dog.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Company.MyDslInheritance.ExampleModelHasDog GetLinkToExampleModel (global::Company.MyDslInheritance.Dog dogInstance)
		{
			global::System.Collections.Generic.IList<global::Company.MyDslInheritance.ExampleModelHasDog> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslInheritance.ExampleModelHasDog>(dogInstance, global::Company.MyDslInheritance.ExampleModelHasDog.DogDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Dog not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ExampleModelHasDog instance accessors
		
		/// <summary>
		/// Get any ExampleModelHasDog links between a given ExampleModel and a Dog.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.MyDslInheritance.ExampleModelHasDog> GetLinks( global::Company.MyDslInheritance.ExampleModel source, global::Company.MyDslInheritance.Dog target )
		{
			global::System.Collections.Generic.List<global::Company.MyDslInheritance.ExampleModelHasDog> outLinks = new global::System.Collections.Generic.List<global::Company.MyDslInheritance.ExampleModelHasDog>();
			global::System.Collections.Generic.IList<global::Company.MyDslInheritance.ExampleModelHasDog> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslInheritance.ExampleModelHasDog>(source, global::Company.MyDslInheritance.ExampleModelHasDog.ExampleModelDomainRoleId);
			foreach ( global::Company.MyDslInheritance.ExampleModelHasDog link in links )
			{
				if ( target.Equals(link.Dog) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ExampleModelHasDog link between a given ExampleModeland a Dog.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Company.MyDslInheritance.ExampleModelHasDog GetLink( global::Company.MyDslInheritance.ExampleModel source, global::Company.MyDslInheritance.Dog target )
		{
			global::System.Collections.Generic.IList<global::Company.MyDslInheritance.ExampleModelHasDog> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslInheritance.ExampleModelHasDog>(source, global::Company.MyDslInheritance.ExampleModelHasDog.ExampleModelDomainRoleId);
			foreach ( global::Company.MyDslInheritance.ExampleModelHasDog link in links )
			{
				if ( target.Equals(link.Dog) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Company.MyDslInheritance
{
	/// <summary>
	/// DomainRelationship ExampleModelHasCat
	/// Description for Company.MyDslInheritance.ExampleModelHasCat
	/// </summary>
	[DslDesign::DisplayNameResource("Company.MyDslInheritance.ExampleModelHasCat.DisplayName", typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel), "Company.MyDslInheritance.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Company.MyDslInheritance.ExampleModelHasCat.Description", typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel), "Company.MyDslInheritance.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("3e88c321-5265-4cd0-bd29-0c1487068979")]
	public partial class ExampleModelHasCat : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ExampleModelHasCat domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3e88c321, 0x5265, 0x4cd0, 0xbd, 0x29, 0x0c, 0x14, 0x87, 0x06, 0x89, 0x79);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ExampleModelHasCat link in the same Partition as the given ExampleModel
		/// </summary>
		/// <param name="source">ExampleModel to use as the source of the relationship.</param>
		/// <param name="target">Cat to use as the target of the relationship.</param>
		public ExampleModelHasCat(ExampleModel source, Cat target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ExampleModelHasCat.ExampleModelDomainRoleId, source), new DslModeling::RoleAssignment(ExampleModelHasCat.CatDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleModelHasCat(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleModelHasCat(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ExampleModelHasCat(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ExampleModelHasCat(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ExampleModel domain role code
		
		/// <summary>
		/// ExampleModel domain role Id.
		/// </summary>
		public static readonly global::System.Guid ExampleModelDomainRoleId = new global::System.Guid(0x7d09f78a, 0xc446, 0x4f05, 0x88, 0xcc, 0xb2, 0x81, 0x3a, 0x1b, 0x4c, 0xb7);
		
		/// <summary>
		/// DomainRole ExampleModel
		/// Description for Company.MyDslInheritance.ExampleModelHasCat.ExampleModel
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslInheritance.ExampleModelHasCat/ExampleModel.DisplayName", typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel), "Company.MyDslInheritance.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslInheritance.ExampleModelHasCat/ExampleModel.Description", typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel), "Company.MyDslInheritance.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Cat", PropertyDisplayNameKey="Company.MyDslInheritance.ExampleModelHasCat/ExampleModel.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("7d09f78a-c446-4f05-88cc-b2813a1b4cb7")]
		public virtual ExampleModel ExampleModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ExampleModel)DslModeling::DomainRoleInfo.GetRolePlayer(this, ExampleModelDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ExampleModelDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ExampleModel of a Cat
		/// <summary>
		/// Gets ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ExampleModel GetExampleModel(Cat element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, CatDomainRoleId) as ExampleModel;
		}
		
		/// <summary>
		/// Sets ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetExampleModel(Cat element, ExampleModel newExampleModel)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, CatDomainRoleId, newExampleModel);
		}
		#endregion
		#region Cat domain role code
		
		/// <summary>
		/// Cat domain role Id.
		/// </summary>
		public static readonly global::System.Guid CatDomainRoleId = new global::System.Guid(0xd6d04f52, 0x116d, 0x434d, 0xac, 0x22, 0xd7, 0x6b, 0xc9, 0xa3, 0x3b, 0x46);
		
		/// <summary>
		/// DomainRole Cat
		/// Description for Company.MyDslInheritance.ExampleModelHasCat.Cat
		/// </summary>
		[DslDesign::DisplayNameResource("Company.MyDslInheritance.ExampleModelHasCat/Cat.DisplayName", typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel), "Company.MyDslInheritance.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Company.MyDslInheritance.ExampleModelHasCat/Cat.Description", typeof(global::Company.MyDslInheritance.MyDslInheritanceDomainModel), "Company.MyDslInheritance.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ExampleModel", PropertyDisplayNameKey="Company.MyDslInheritance.ExampleModelHasCat/Cat.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("d6d04f52-116d-434d-ac22-d76bc9a33b46")]
		public virtual Cat Cat
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Cat)DslModeling::DomainRoleInfo.GetRolePlayer(this, CatDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, CatDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Cat of a ExampleModel
		/// <summary>
		/// Gets a list of Cat.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Cat> GetCat(ExampleModel element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Cat>, Cat>(element, ExampleModelDomainRoleId);
		}
		#endregion
		#region ExampleModel link accessor
		/// <summary>
		/// Get the list of ExampleModelHasCat links to a ExampleModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.MyDslInheritance.ExampleModelHasCat> GetLinksToCat ( global::Company.MyDslInheritance.ExampleModel exampleModelInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslInheritance.ExampleModelHasCat>(exampleModelInstance, global::Company.MyDslInheritance.ExampleModelHasCat.ExampleModelDomainRoleId);
		}
		#endregion
		#region Cat link accessor
		/// <summary>
		/// Get the ExampleModelHasCat link to a Cat.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Company.MyDslInheritance.ExampleModelHasCat GetLinkToExampleModel (global::Company.MyDslInheritance.Cat catInstance)
		{
			global::System.Collections.Generic.IList<global::Company.MyDslInheritance.ExampleModelHasCat> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslInheritance.ExampleModelHasCat>(catInstance, global::Company.MyDslInheritance.ExampleModelHasCat.CatDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Cat not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ExampleModelHasCat instance accessors
		
		/// <summary>
		/// Get any ExampleModelHasCat links between a given ExampleModel and a Cat.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Company.MyDslInheritance.ExampleModelHasCat> GetLinks( global::Company.MyDslInheritance.ExampleModel source, global::Company.MyDslInheritance.Cat target )
		{
			global::System.Collections.Generic.List<global::Company.MyDslInheritance.ExampleModelHasCat> outLinks = new global::System.Collections.Generic.List<global::Company.MyDslInheritance.ExampleModelHasCat>();
			global::System.Collections.Generic.IList<global::Company.MyDslInheritance.ExampleModelHasCat> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslInheritance.ExampleModelHasCat>(source, global::Company.MyDslInheritance.ExampleModelHasCat.ExampleModelDomainRoleId);
			foreach ( global::Company.MyDslInheritance.ExampleModelHasCat link in links )
			{
				if ( target.Equals(link.Cat) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ExampleModelHasCat link between a given ExampleModeland a Cat.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Company.MyDslInheritance.ExampleModelHasCat GetLink( global::Company.MyDslInheritance.ExampleModel source, global::Company.MyDslInheritance.Cat target )
		{
			global::System.Collections.Generic.IList<global::Company.MyDslInheritance.ExampleModelHasCat> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Company.MyDslInheritance.ExampleModelHasCat>(source, global::Company.MyDslInheritance.ExampleModelHasCat.ExampleModelDomainRoleId);
			foreach ( global::Company.MyDslInheritance.ExampleModelHasCat link in links )
			{
				if ( target.Equals(link.Cat) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
